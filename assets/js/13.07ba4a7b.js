(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{466:function(s,e,v){"use strict";v.r(e);var n=v(4),t=Object(n.a)({},(function(){var s=this,e=s.$createElement,v=s._self._c||e;return v("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[v("p",[s._v("Css选择器的概念器：")]),s._v(" "),v("p",[s._v("Css页面上元素的“档案”，那么在管理这些元素的效果之前，必须先“找的到”这些元素。")]),s._v(" "),v("p",[s._v("选择器就是指“css找到元素的方法”")]),s._v(" "),v("p",[s._v("例如：#header{}，这种情况就是以header为id的元素被选中，这种选择器叫id选择器。")]),s._v(" "),v("p",[s._v("id选择器\n就是，给页面上的元素起一个不重复的id，然后css，通过#id，就能控制该元素。这个概念称为css选择器。")]),s._v(" "),v("p",[s._v('类选择器\n用法：页面里有<class="类名”>来声明类，css里，用 点 + 类名 来选择这一类的元素 例如 .className{}')]),s._v(" "),v("p",[s._v("标签选择器\n因为html有很多标签，如hl，p，div，img，这样标签在页面里构成很多元素，css可以通过标签名来选定页面内标签对应的元素\n比如：P{}，会对页面里所有的P标签生效 Div{}，img{}，则会对页面里所有的div，img生效")]),s._v(" "),v("p",[s._v("群组选择器\n例如 #header，.intro{} 意味着括号内的css同时对#header，.intro生效，用来简化代码")]),s._v(" "),v("p",[s._v("派生选择器（父子选择器）\n通过元素的上下级关系来进行选择（像地区从大到小的选择一样） 比如：#header img{}（中间加空格） 和 #header ul{}，则意味着分别选中#header元素下面的img元素和ul元素")]),s._v(" "),v("p",[s._v("通配选择器\n*{}，通配页面上的所有元素")]),s._v(" "),v("p",[s._v("伪类选择器")])])}),[],!1,null,null,null);e.default=t.exports}}]);